package khansapos;

import java.awt.Color;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;


public final class KoneksiSetting extends javax.swing.JFrame {
Properties prop;

    public KoneksiSetting() {
        initComponents();
        setIcon();
        SwingUtilities.invokeLater(() -> { txtHost.requestFocusInWindow(); });
        super.setBackground(new Color(0, 0, 0, 0));   
    }
    
    private void setIcon(){
         ImageIcon icon = new ImageIcon("image/keys.png");
        setIconImage(icon.getImage());   
}
    
    private void CreatePropertiesFile() {
        if (txtHost.getText().trim().isEmpty() || txtPort.getText().trim().isEmpty() || txtUser.getText().trim().isEmpty() || 
                txtDatabase.getText().trim().isEmpty() ) {
            JOptionPane.showMessageDialog(null, "<html>Host Name <br> Port Number <br> User <br> Database Name <br>"
                    + "TIDAK BOLEH KOSONG !!</html>", "Khansa POS", JOptionPane.WARNING_MESSAGE);
        }else {
            prop = new Properties();
            prop.setProperty("HOST", txtHost.getText());
            prop.setProperty("PORT", txtPort.getText());
            prop.setProperty("USER", txtUser.getText());
            prop.setProperty("PASS", String.copyValueOf(txtPassword.getPassword(), 0, txtPassword.getPassword().length));
            prop.setProperty("DB", txtDatabase.getText());
        
            FileOutputStream fos;
                try {
                        fos = new FileOutputStream("SettingDB.xml");
                        prop.storeToXML(fos, "Settingan", "UTF-8");
                        JOptionPane.showMessageDialog(this, "<html>KONFIGURASI DATABASE BERHASIL <br>"
                                + "Untuk Menyimpan pengaturan, Aplikasi Akan ditutup <br>Silahkan jalankan ulang aplikasi</html>");
                        Tutup();
                } catch (FileNotFoundException e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
         }
    }

    private void ReadPropertiesFile() {  

            prop = new Properties();  
                try {  
                    prop.loadFromXML(new FileInputStream("SettingDB.xml"));  
                    JOptionPane.showMessageDialog(this, "Host : " + prop.getProperty("HOST")  
                        + "\nPort : " + prop.getProperty("PORT")  
                        + "\nUser : " + prop.getProperty("USER")  
                        + "\nPassword : " + prop.getProperty("PASS")  
                        + "\nDatabase   : " + prop.getProperty("DB"));  
                } catch (IOException ex) {  
                    JOptionPane.showMessageDialog(this, ex.getMessage());        
            }         
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        uPanelRoundrect1 = new Utility.UPanelRoundrect();
        jLabel2 = new javax.swing.JLabel();
        lbSetting = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        uPanelRoundrect2 = new Utility.UPanelRoundrect();
        jLabel3 = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        txtPassword = new javax.swing.JPasswordField();
        btnCancel = new Utility.UButton();
        btnSimpan = new Utility.UButton();
        btnTampil = new Utility.UButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImages(null);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        uPanelRoundrect1.setKetebalanBorder(2.5F);
        uPanelRoundrect1.setWarnaBackground(new java.awt.Color(0, 123, 255));
        uPanelRoundrect1.setWarnaBorder(new java.awt.Color(77, 200, 255));
        uPanelRoundrect1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("( Untuk menghubungkan aplikasi ke database )");
        jLabel2.setToolTipText(null);
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        uPanelRoundrect1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 310, -1));

        lbSetting.setBackground(new java.awt.Color(255, 255, 255));
        lbSetting.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 11)); // NOI18N
        lbSetting.setForeground(new java.awt.Color(102, 102, 102));
        lbSetting.setIcon(new javax.swing.ImageIcon("D:\\Java\\Belajar Java\\KhansaPOS\\image\\database-settings-icon.png")); // NOI18N
        lbSetting.setToolTipText(null);
        lbSetting.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uPanelRoundrect1.add(lbSetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 50, 60));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DataBase Settings");
        jLabel1.setToolTipText(null);
        uPanelRoundrect1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 220, -1));

        uPanelRoundrect2.setKetebalanBorder(2.5F);
        uPanelRoundrect2.setWarnaBorder(new java.awt.Color(77, 200, 255));
        uPanelRoundrect2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Ip Address / Server Name");
        jLabel3.setToolTipText(null);
        uPanelRoundrect2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        txtHost.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        txtHost.setToolTipText(null);
        txtHost.setBorder(null);
        txtHost.setOpaque(false);
        txtHost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHostKeyPressed(evt);
            }
        });
        uPanelRoundrect2.add(txtHost, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 260, 20));

        jSeparator1.setForeground(new java.awt.Color(230, 230, 230));
        uPanelRoundrect2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 260, 10));

        jLabel4.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Port");
        jLabel4.setToolTipText(null);
        uPanelRoundrect2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        txtPort.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        txtPort.setToolTipText(null);
        txtPort.setBorder(null);
        txtPort.setOpaque(false);
        txtPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPortKeyPressed(evt);
            }
        });
        uPanelRoundrect2.add(txtPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 260, 20));

        jSeparator2.setForeground(new java.awt.Color(230, 230, 230));
        uPanelRoundrect2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 260, 10));

        jLabel5.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("User Name");
        jLabel5.setToolTipText(null);
        uPanelRoundrect2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        txtUser.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        txtUser.setToolTipText(null);
        txtUser.setBorder(null);
        txtUser.setOpaque(false);
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
        });
        uPanelRoundrect2.add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 260, 20));

        jSeparator3.setForeground(new java.awt.Color(230, 230, 230));
        uPanelRoundrect2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 260, 10));

        jLabel6.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Password");
        jLabel6.setToolTipText(null);
        uPanelRoundrect2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jSeparator4.setForeground(new java.awt.Color(230, 230, 230));
        uPanelRoundrect2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 260, 10));

        jLabel7.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Database Name");
        jLabel7.setToolTipText(null);
        uPanelRoundrect2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        txtDatabase.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        txtDatabase.setToolTipText(null);
        txtDatabase.setBorder(null);
        txtDatabase.setOpaque(false);
        txtDatabase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDatabaseKeyPressed(evt);
            }
        });
        uPanelRoundrect2.add(txtDatabase, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 260, 20));

        jSeparator5.setForeground(new java.awt.Color(230, 230, 230));
        uPanelRoundrect2.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 260, 10));

        txtPassword.setBorder(null);
        txtPassword.setOpaque(false);
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });
        uPanelRoundrect2.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 260, -1));

        btnCancel.setMnemonic('c');
        btnCancel.setText("Cancel");
        btnCancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnCancel.setKetebalanBorder(2.0F);
        btnCancel.setKetumpulanSudut(35);
        btnCancel.setPreferredSize(new java.awt.Dimension(150, 38));
        btnCancel.setWarnaBackground(new java.awt.Color(235, 154, 35));
        btnCancel.setWarnaBackgroundHover(new java.awt.Color(255, 231, 112));
        btnCancel.setWarnaBackgroundPress(new java.awt.Color(235, 154, 35));
        btnCancel.setWarnaBorder(new java.awt.Color(255, 231, 112));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        uPanelRoundrect2.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 100, -1));

        btnSimpan.setMnemonic('s');
        btnSimpan.setText("Simpan Settings");
        btnSimpan.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSimpan.setKetebalanBorder(2.0F);
        btnSimpan.setKetumpulanSudut(35);
        btnSimpan.setPreferredSize(new java.awt.Dimension(170, 38));
        btnSimpan.setWarnaBorder(new java.awt.Color(164, 253, 163));
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        uPanelRoundrect2.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, -1, -1));

        uPanelRoundrect1.add(uPanelRoundrect2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 330, 420));

        btnTampil.setMnemonic('t');
        btnTampil.setText("Tampilkan Settings");
        btnTampil.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnTampil.setKetebalanBorder(2.0F);
        btnTampil.setKetumpulanSudut(35);
        btnTampil.setPreferredSize(new java.awt.Dimension(150, 38));
        btnTampil.setWarnaBackground(new java.awt.Color(0, 123, 255));
        btnTampil.setWarnaBackgroundHover(new java.awt.Color(77, 200, 255));
        btnTampil.setWarnaBackgroundPress(new java.awt.Color(0, 123, 255));
        btnTampil.setWarnaBorder(new java.awt.Color(77, 200, 255));
        btnTampil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilActionPerformed(evt);
            }
        });
        uPanelRoundrect1.add(btnTampil, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 190, -1));

        getContentPane().add(uPanelRoundrect1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 440));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtHostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHostKeyPressed
         if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtPort.setText(null);
            txtPort.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtHost.setText("");
         }
    }//GEN-LAST:event_txtHostKeyPressed

    private void txtPortKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortKeyPressed
         if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtUser.setText(null);
            txtUser.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtPort.setText("");
         }
    }//GEN-LAST:event_txtPortKeyPressed

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
         if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtPassword.setText(null);
            txtPassword.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtPort.setText("");
         }
    }//GEN-LAST:event_txtUserKeyPressed

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
         if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtDatabase.setText(null);
            txtDatabase.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtPassword.setText("");
         }
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void txtDatabaseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDatabaseKeyPressed
         if(evt.getKeyCode() == KeyEvent.VK_ENTER){
             CreatePropertiesFile ();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtDatabase.setText("");
         }
    }//GEN-LAST:event_txtDatabaseKeyPressed

    private void btnTampilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilActionPerformed
        ReadPropertiesFile();
    }//GEN-LAST:event_btnTampilActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        CreatePropertiesFile();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        Tutup();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void Tutup(){
            new Login().setVisible(true);
            dispose();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KoneksiSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KoneksiSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KoneksiSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KoneksiSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Frame fr=new KoneksiSetting();                        
           //fr.setIconImage(Toolkit.getDefaultToolkit().getImage("\\image\\iconSetting32.PNG"));    
            
            fr.setVisible(true);
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Utility.UButton btnCancel;
    private Utility.UButton btnSimpan;
    private Utility.UButton btnTampil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lbSetting;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtHost;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtUser;
    private Utility.UPanelRoundrect uPanelRoundrect1;
    private Utility.UPanelRoundrect uPanelRoundrect2;
    // End of variables declaration//GEN-END:variables


}
